#!/bin/bash

set -e

if [ "$VERBOSE" = "true" ]; then
  echo "enabling debug mode...."
  set -x
fi

function log_info() {
    echo -e "\e[35m[Info: docker-cache-shim]\e[39m $@"
}

function cache-tag() {
    local tag=$1
    local default_prefix=circleci-cache
    local prefix=${$2:-$default_prefix}
    echo -n "$prefix"-"$tag"
}


function pull() {
    local _image=$1
    local image=$(echo $_image | awk -F: '{print $1}')

    local _tag=$(echo $_image | awk -F: '{print $2}')
    local tag=$(cache-tag $2)

    local fallback_tag=$3


    if ! docker pull $image:$tag; then
	log_info "Cache tag $tag doesn't exist. Pulling cache from $fallback_tag cache tag"

	if ! docker pull $image:$fallback_tag; then
	    log_info "Cache tag $fallback_tag doesn't exit. No cache will be used."
	fi
    fi
}


function push() {
    local _image=$1
    local image=$(echo $_image | awk -F: '{print $1}')

    local _tag=$(echo $_image | awk -F: '{print $2}')
    local tag=$(cache-tag $2)

    log_info "Tagging image for caching: $_image -> $image:$tag"
    docker tag -f $_image $image:$tag

    log_info "Pushing to $image:$tag"
    docker push $image:$tag
}

function usage_exit() {
    echo "usage_exit...."
    exit 0
}

function main() {
    case $1 in
    	"pull" ) local operation="pull" ;;
    	"push" ) local operation="push" ;;
    	* ) usage_exit ;;
    esac

    local image=$2

    # No image specified
    if [ -z $image ]; then
       usage_exit
    fi

    shift 2

    while getopts f:t:h OPT
    do
    	case $OPT in
            f)  local override_fallback_tag=$OPTARG
    	    ;;
            t)  local tag=$OPTARG
    	    ;;
            \?) usage_exit
    	    ;;
    	esac
    done

    if [ $CIRCLE_BRANCH = "master" ] && [ -z "${tag}" ]; then
        tag=latest
    fi

    local tag=$(cache-tag ${$tag:-$CIRCLE_BRANCH})
    local default_fallback_tag="latest"
    local fallback_tag=${override_fallback_tag:-$default_fallback_tag}

    log_info "Using $tag as a cache tag"

    eval $operation $image $tag $fallback_tag
}

main $@
